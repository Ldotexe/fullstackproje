services:
  postgres:
    image: postgres:12.2-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - PGUSER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PW}
    restart: always
    volumes:
      - ./db:/var/lib/postgresql/data
    env_file:
      - .env
    ports:
      - "${DB_PORT}:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready", "-U", "${POSTGRES_USER}" ]
      interval: 2s
      timeout: 2s
      retries: 3

  backend:
    image: go-backend
    build:
      context: ./backend
    env_file:
      - .env
    depends_on:
      postgres:
        condition: service_healthy

  frontend:
    image: react-frontend
    build:
      context: ./frontend
    env_file:
      - .env
    depends_on:
      backend:
        condition: service_started

  nginx:
    image: nginx-proxy
    build:
      context: ./nginx
    env_file:
      - .env
    ports:
      - "${NGINX_PORT}:80"
    depends_on:
      backend:
        condition: service_started
      frontend:
        condition: service_started




